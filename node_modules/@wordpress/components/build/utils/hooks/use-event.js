"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useEvent = useEvent;
var _element = require("@wordpress/element");
/* eslint-disable jsdoc/require-param */
/**
 * WordPress dependencies
 */

/**
 * Any function.
 */

/**
 * Creates a stable callback function that has access to the latest state and
 * can be used within event handlers and effect callbacks. Throws when used in
 * the render phase.
 *
 * @example
 *
 * ```tsx
 * function Component(props) {
 *   const onClick = useEvent(props.onClick);
 *   React.useEffect(() => {}, [onClick]);
 * }
 * ```
 */
function useEvent(callback) {
  const ref = (0, _element.useRef)(() => {
    throw new Error('Cannot call an event handler while rendering.');
  });
  (0, _element.useInsertionEffect)(() => {
    ref.current = callback;
  });
  return (0, _element.useCallback)((...args) => ref.current?.(...args), []);
}
/* eslint-enable jsdoc/require-param */
//# sourceMappingURL=use-event.js.map